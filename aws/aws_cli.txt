
# Documentation URL
https://docs.aws.amazon.com/index.html

# Install AWS CLI
pip3 install awscli --upgrade --user

# Check version
aws --version

# Configuration (Access Key, Region, Output Format)
aws configure

# Command format
aws <service> <operation> <parameters>
e.g aws ec2 run-instances --instance-id i-11234

# CLI Output
JSON
Text
Table

# General command parameters
--query: Filter fields displayed in result ('Reservations[0].Instances[0])
--filter: Applies filtering server side ("Name=platform,Values=windows")
--dry-run: Checks if authorized without making a request

# CLI help (Different levels)
aws help
aws <service> help
aws <service> <operation> help

# Read/Edit profile(s)
nano ~/.aws/config

# Run cli command using different profile
aws s3 ls --profile profile_name

# Change default profile
export AWS_PROFILE=profile_name

# List profiles
aws configure list-profiles



#-----------------------
# Create Lambda Function
#-----------------------
aws iam create-role --role-name de-lambda-ex --assume-role-policy-document file://trust-policy.json

aws iam attach-role-policy --role-name de-lambda-ex --policy-arn arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

aws lambda create-function --function-name de-logging-function \
--zip-file fileb://sad_lambda.zip --handler sad_lambda.lambda_handler --runtime python3.8 \
--role arn:aws:iam::<Your account ID>:role/de-lambda-ex

aws lambda invoke --function-name de-logging-function out --log-type Tail \
--query 'LogResult' --output text |  base64 -d 

aws lambda delete-function --function-name de-logging-function


#---------------------------
# Create a Data Pipeline
#-------------------------

aws datapipeline create-pipeline --name pipeline_name --unique-id token


# upload pipeline definition
aws datapipeline put-pipeline-definition \
--pipeline-id <your-pipeline-id> \
--pipeline-definition file://pipeline_definition.json

# activate pipeline
aws datapipeline activate-pipeline \
--pipeline-id <your-pipeline-id>

# verify pipeline
aws datapipeline list-pipelines

# verify the pipeline runs
aws datapipeline list-runs

# delete pipeline
aws datapipeline delete-pipeline \
--pipeline-id <pipeline_id>