#============================
# Relational Database Service
#============================

# Create a Database
-------------------
Services -> Amazon RDS
Panel -> Databases -> 'Create Database'
Choose between 'Standard Create' & 'Easy Create'
Choose Engine Type (Aurora, MySQL, MariaDB, PostgreSQL, Oracle, MS SQL Server)
If 'Standard Create':
Pick engine 'Version'
Pick 'Templates' type (Production, Dev/Test, Free tier)
Settings:
    DB instance identifier (db name)
    Master username
    Master password & confirm password
DB Instance Size:
    Choose One (Standard, Memory Optimised, Burstable)
Storage:
    Storage type
    Allocated Storage
    Storage Autoscaling (checked by default)
    Max storage threshold (enter value in GB)
Availability & Durability:
    Multi-AZ Deployement:
        Choose to have standby instance or not
Connectivity:
    Choose VPC
    Additional connectivity configuration:
        choose subnet
        Allow public access?
        VPC Security Group
        AZ preference
        Database port
Additional Configuration:
    Database Options:
        Initial database name (must specify)
        Choose Auto backups perion (0-35 days)
        Choose backup window
        Enable Performance Insights
        Enable Enhanced Monitoring?
        Log Exports
        Maintanance:
            Enable auto minor version upgrade
            Maintanance window
        Deletion Protection?

'Create Database'

NOTE: Set your security group to allow for traffic coming into your db



# Reserved DB Instances
-----------------------
RDS Panel -> Purchase Reserved Instances
Options:
    Product Description (choose db engine)
    DB instance class (t2.micro, t2.large, etc)
    Multi-AZ?
    Term (1 or 3 years)
    Offering Type (No upfront, Partial upfront, All upfront)
    Number of DB instances


# Create a DB Snapshot
----------------------
Go into db -> Maintanance & backups
Take Snapshot
Name snapshot -> Take Snapshot


# Restore a DB Snapshot
-----------------------
RDS Panel -> Snapshots
Choose snapshot -> Restore snapshot
Instance Specifications:
    DB Engine
    Licence Model
    DB Instance class (t2.large, etc)
    Multi-AZ Deployment

'Restore DB Instance'


# Create Aurora Serverless
--------------------------
RDS -> Create Database
Standard Create
Choose Aurora
Edition -> Aurora with PostgreSQL
Database Features -> Serverless
Settings:
    DB cluster identifier(db name)
    Credential Settings:
        Master username
        Master password
Capacity Settings:
    Choose min & max Capacity
Connectivity:
    Choose VPC
Additional connectivity configuration:
    Subnet group
    VPC security group
Additional Configuration:
    Database Options:
        DB cluster parameter group
        Backup (can't switch off)
        Encryption
        Deletion protection?

'Create Database'


========
AWS CLI
========

# Create a RDS instance
aws rds create-db-instance --db-name ExampleDB --engine MySQL \
--db-instance-identifier MySQLForLambdaTest --backup-retention-period 3 \
--db-instance-class db.t2.micro --allocated-storage 5 --no-publicly-accessible \
--master-username username --master-user-password password

# Create an RDS Snapshot
aws rds create-db-snapshot \
--db-instance-identifier <db_name> \
--db-snapshot-identifier <snapshot_name>

# Restore from a snapshot (add it back to original SG if required)
aws rds restore-db-instance-from-db-snapshot \
--db-instance-identifier <new_db_name> \
--db-snapshot-identifier <snapshot_name>

# Copy an RDS snapshot, along with its tags
aws rds copy-db-snapshot \
--source-db-snapshot-identifier <snapshot_name> \
--target-db-snapshot-identifier <snapshot_copy_name> \
--copy-tags

# Delete a snapshot
aws rds delete-db-snapshot \
--db-snapshot-identifier <snapshot_name>