// JavaScript Object Notation
// Used for serialising/desirialising data

// Similar to Python dict
// "Double Quotes" for keys
{"name": "Muzi", "age": 33, "height": 1.75}

// Can easily nest objects.
// No comma after last object
{"students":[
    {"name":"John", "age":"23", "city":"Agra"},
    {"name":"Steve", "age":"28", "city":"Delhi"},
    {"name":"Chaitanya", "age":"28", "city":"Bangalore"}
 ]}

 // Data Types
 {
"number": 123,
"string": "piece of text",
"boolean": true,
"array": [1,2,3,4],
"object": {"name": "Muzi", "height": 1.75},
"null": {}
}

//===============
//  JMESPath
//===============
// Query language for json

{"desserts": [
        {"name": "Chocolate cake", "price": "20.00" },
      {"name": "Ice cream", "price": "15.00" },
      {"name": "Carrot cake", "price": "22.00" }
    ] }

//  list of all desserts
desserts // or desserts[] or desserts[*]

// first dessert in list
// zero-based indexing
desserts[0]

//  all dessert names
desserts[*].name

//  desserts' name & price in list
desserts[*].[name, price]

// use filter to find value
desserts[?name=='Carrot cake']

// find price of carrot cake
desserts[?name=='Carrot cake'].price
